//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HomeOS.Hub.Common.Bolt.DataStore.MetaDataService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Principal", Namespace="http://schemas.datacontract.org/2004/07/HomeOS.Hub.Common.MDServer")]
    [System.SerializableAttribute()]
    public partial class Principal : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AppIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] AuthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HomeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AppId {
            get {
                return this.AppIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AppIdField, value) != true)) {
                    this.AppIdField = value;
                    this.RaisePropertyChanged("AppId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Auth {
            get {
                return this.AuthField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthField, value) != true)) {
                    this.AuthField = value;
                    this.RaisePropertyChanged("Auth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HomeId {
            get {
                return this.HomeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.HomeIdField, value) != true)) {
                    this.HomeIdField = value;
                    this.RaisePropertyChanged("HomeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FQStreamID", Namespace="http://schemas.datacontract.org/2004/07/HomeOS.Hub.Common.MDServer")]
    [System.SerializableAttribute()]
    public partial class FQStreamID : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AppIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HomeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreamIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AppId {
            get {
                return this.AppIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AppIdField, value) != true)) {
                    this.AppIdField = value;
                    this.RaisePropertyChanged("AppId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HomeId {
            get {
                return this.HomeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.HomeIdField, value) != true)) {
                    this.HomeIdField = value;
                    this.RaisePropertyChanged("HomeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StreamId {
            get {
                return this.StreamIdField;
            }
            set {
                if ((object.ReferenceEquals(this.StreamIdField, value) != true)) {
                    this.StreamIdField = value;
                    this.RaisePropertyChanged("StreamId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ACLEntry", Namespace="http://schemas.datacontract.org/2004/07/HomeOS.Hub.Common.MDServer")]
    [System.SerializableAttribute()]
    public partial class ACLEntry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] IVField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] encKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint keyVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.Principal readerNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] IV {
            get {
                return this.IVField;
            }
            set {
                if ((object.ReferenceEquals(this.IVField, value) != true)) {
                    this.IVField = value;
                    this.RaisePropertyChanged("IV");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] encKey {
            get {
                return this.encKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.encKeyField, value) != true)) {
                    this.encKeyField = value;
                    this.RaisePropertyChanged("encKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint keyVersion {
            get {
                return this.keyVersionField;
            }
            set {
                if ((this.keyVersionField.Equals(value) != true)) {
                    this.keyVersionField = value;
                    this.RaisePropertyChanged("keyVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.Principal readerName {
            get {
                return this.readerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.readerNameField, value) != true)) {
                    this.readerNameField = value;
                    this.RaisePropertyChanged("readerName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountInfo", Namespace="http://schemas.datacontract.org/2004/07/HomeOS.Hub.Common.MDServer")]
    [System.SerializableAttribute()]
    public partial class AccountInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string accountKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string accountNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint keyVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string locationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int numField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string accountKey {
            get {
                return this.accountKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.accountKeyField, value) != true)) {
                    this.accountKeyField = value;
                    this.RaisePropertyChanged("accountKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string accountName {
            get {
                return this.accountNameField;
            }
            set {
                if ((object.ReferenceEquals(this.accountNameField, value) != true)) {
                    this.accountNameField = value;
                    this.RaisePropertyChanged("accountName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint keyVersion {
            get {
                return this.keyVersionField;
            }
            set {
                if ((this.keyVersionField.Equals(value) != true)) {
                    this.keyVersionField = value;
                    this.RaisePropertyChanged("keyVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string location {
            get {
                return this.locationField;
            }
            set {
                if ((object.ReferenceEquals(this.locationField, value) != true)) {
                    this.locationField = value;
                    this.RaisePropertyChanged("location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int num {
            get {
                return this.numField;
            }
            set {
                if ((this.numField.Equals(value) != true)) {
                    this.numField = value;
                    this.RaisePropertyChanged("num");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MetaDataService.IMetaDataService")]
    public interface IMetaDataService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/RegisterPubKey", ReplyAction="http://tempuri.org/IMetaDataService/RegisterPubKeyResponse")]
        bool RegisterPubKey(HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.Principal prin, string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/RegisterPubKey", ReplyAction="http://tempuri.org/IMetaDataService/RegisterPubKeyResponse")]
        System.Threading.Tasks.Task<bool> RegisterPubKeyAsync(HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.Principal prin, string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/GetPubKey", ReplyAction="http://tempuri.org/IMetaDataService/GetPubKeyResponse")]
        string GetPubKey(HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.Principal prin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/GetPubKey", ReplyAction="http://tempuri.org/IMetaDataService/GetPubKeyResponse")]
        System.Threading.Tasks.Task<string> GetPubKeyAsync(HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.Principal prin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/UpdateReaderKey", ReplyAction="http://tempuri.org/IMetaDataService/UpdateReaderKeyResponse")]
        bool UpdateReaderKey(HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.Principal caller, HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.FQStreamID FQName, HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.ACLEntry entry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/UpdateReaderKey", ReplyAction="http://tempuri.org/IMetaDataService/UpdateReaderKeyResponse")]
        System.Threading.Tasks.Task<bool> UpdateReaderKeyAsync(HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.Principal caller, HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.FQStreamID FQName, HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.ACLEntry entry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/GetReaderKey", ReplyAction="http://tempuri.org/IMetaDataService/GetReaderKeyResponse")]
        HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.ACLEntry GetReaderKey(HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.FQStreamID FQName, HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.Principal prin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/GetReaderKey", ReplyAction="http://tempuri.org/IMetaDataService/GetReaderKeyResponse")]
        System.Threading.Tasks.Task<HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.ACLEntry> GetReaderKeyAsync(HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.FQStreamID FQName, HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.Principal prin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/AddAccount", ReplyAction="http://tempuri.org/IMetaDataService/AddAccountResponse")]
        bool AddAccount(HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.FQStreamID FQName, HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.AccountInfo accinfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/AddAccount", ReplyAction="http://tempuri.org/IMetaDataService/AddAccountResponse")]
        System.Threading.Tasks.Task<bool> AddAccountAsync(HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.FQStreamID FQName, HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.AccountInfo accinfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/GetAllAccounts", ReplyAction="http://tempuri.org/IMetaDataService/GetAllAccountsResponse")]
        System.Collections.Generic.Dictionary<int, HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.AccountInfo> GetAllAccounts(HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.FQStreamID FQName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/GetAllAccounts", ReplyAction="http://tempuri.org/IMetaDataService/GetAllAccountsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<int, HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.AccountInfo>> GetAllAccountsAsync(HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.FQStreamID FQName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/GetMdAccount", ReplyAction="http://tempuri.org/IMetaDataService/GetMdAccountResponse")]
        HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.AccountInfo GetMdAccount(HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.FQStreamID FQName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/GetMdAccount", ReplyAction="http://tempuri.org/IMetaDataService/GetMdAccountResponse")]
        System.Threading.Tasks.Task<HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.AccountInfo> GetMdAccountAsync(HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.FQStreamID FQName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/AddMdAccount", ReplyAction="http://tempuri.org/IMetaDataService/AddMdAccountResponse")]
        bool AddMdAccount(HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.FQStreamID FQName, HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.AccountInfo accinfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/AddMdAccount", ReplyAction="http://tempuri.org/IMetaDataService/AddMdAccountResponse")]
        System.Threading.Tasks.Task<bool> AddMdAccountAsync(HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.FQStreamID FQName, HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.AccountInfo accinfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/GetAllReaders", ReplyAction="http://tempuri.org/IMetaDataService/GetAllReadersResponse")]
        HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.Principal[] GetAllReaders(HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.FQStreamID FQName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/GetAllReaders", ReplyAction="http://tempuri.org/IMetaDataService/GetAllReadersResponse")]
        System.Threading.Tasks.Task<HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.Principal[]> GetAllReadersAsync(HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.FQStreamID FQName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/RemoveAllInfo", ReplyAction="http://tempuri.org/IMetaDataService/RemoveAllInfoResponse")]
        void RemoveAllInfo(HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.FQStreamID FQName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/RemoveAllInfo", ReplyAction="http://tempuri.org/IMetaDataService/RemoveAllInfoResponse")]
        System.Threading.Tasks.Task RemoveAllInfoAsync(HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.FQStreamID FQName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMetaDataServiceChannel : HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.IMetaDataService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MetaDataServiceClient : System.ServiceModel.ClientBase<HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.IMetaDataService>, HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.IMetaDataService {
        
        public MetaDataServiceClient() {
        }
        
        public MetaDataServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MetaDataServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MetaDataServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MetaDataServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool RegisterPubKey(HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.Principal prin, string key) {
            return base.Channel.RegisterPubKey(prin, key);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterPubKeyAsync(HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.Principal prin, string key) {
            return base.Channel.RegisterPubKeyAsync(prin, key);
        }
        
        public string GetPubKey(HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.Principal prin) {
            return base.Channel.GetPubKey(prin);
        }
        
        public System.Threading.Tasks.Task<string> GetPubKeyAsync(HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.Principal prin) {
            return base.Channel.GetPubKeyAsync(prin);
        }
        
        public bool UpdateReaderKey(HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.Principal caller, HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.FQStreamID FQName, HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.ACLEntry entry) {
            return base.Channel.UpdateReaderKey(caller, FQName, entry);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateReaderKeyAsync(HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.Principal caller, HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.FQStreamID FQName, HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.ACLEntry entry) {
            return base.Channel.UpdateReaderKeyAsync(caller, FQName, entry);
        }
        
        public HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.ACLEntry GetReaderKey(HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.FQStreamID FQName, HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.Principal prin) {
            return base.Channel.GetReaderKey(FQName, prin);
        }
        
        public System.Threading.Tasks.Task<HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.ACLEntry> GetReaderKeyAsync(HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.FQStreamID FQName, HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.Principal prin) {
            return base.Channel.GetReaderKeyAsync(FQName, prin);
        }
        
        public bool AddAccount(HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.FQStreamID FQName, HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.AccountInfo accinfo) {
            return base.Channel.AddAccount(FQName, accinfo);
        }
        
        public System.Threading.Tasks.Task<bool> AddAccountAsync(HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.FQStreamID FQName, HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.AccountInfo accinfo) {
            return base.Channel.AddAccountAsync(FQName, accinfo);
        }
        
        public System.Collections.Generic.Dictionary<int, HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.AccountInfo> GetAllAccounts(HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.FQStreamID FQName) {
            return base.Channel.GetAllAccounts(FQName);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<int, HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.AccountInfo>> GetAllAccountsAsync(HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.FQStreamID FQName) {
            return base.Channel.GetAllAccountsAsync(FQName);
        }
        
        public HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.AccountInfo GetMdAccount(HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.FQStreamID FQName) {
            return base.Channel.GetMdAccount(FQName);
        }
        
        public System.Threading.Tasks.Task<HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.AccountInfo> GetMdAccountAsync(HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.FQStreamID FQName) {
            return base.Channel.GetMdAccountAsync(FQName);
        }
        
        public bool AddMdAccount(HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.FQStreamID FQName, HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.AccountInfo accinfo) {
            return base.Channel.AddMdAccount(FQName, accinfo);
        }
        
        public System.Threading.Tasks.Task<bool> AddMdAccountAsync(HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.FQStreamID FQName, HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.AccountInfo accinfo) {
            return base.Channel.AddMdAccountAsync(FQName, accinfo);
        }
        
        public HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.Principal[] GetAllReaders(HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.FQStreamID FQName) {
            return base.Channel.GetAllReaders(FQName);
        }
        
        public System.Threading.Tasks.Task<HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.Principal[]> GetAllReadersAsync(HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.FQStreamID FQName) {
            return base.Channel.GetAllReadersAsync(FQName);
        }
        
        public void RemoveAllInfo(HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.FQStreamID FQName) {
            base.Channel.RemoveAllInfo(FQName);
        }
        
        public System.Threading.Tasks.Task RemoveAllInfoAsync(HomeOS.Hub.Common.Bolt.DataStore.MetaDataService.FQStreamID FQName) {
            return base.Channel.RemoveAllInfoAsync(FQName);
        }
    }
}
